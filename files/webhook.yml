---

# username
-
  name: username
  description: |
    Overrides webhook's username. Useful, if you're using same webhook url for several things.
  image: /img/username.png
  example: |
    ```json
    {
      "username": "Cat",
      "content": "Hello!"
    }
    ```

# avatar_url
-
  name: avatar_url
  description: |
    Overrides webhook's avatar. Useful, if you're using same webhook url for several things.
  image: /img/avatar_url.png
  example: |
    ```json
    {
      "avatar_url": "https://i.imgur.com/oBPXx0D.png",
      "content": "Woof-woof!"
    }
    ```

# content
-
  name: content
  description: |
    Sets text for webhook message.
  image: /img/content.png
  example: |
    ```json
    {
      "content": "*reads manual*"
    }
    ```

# embeds
-
  name: embeds
  description: |
    Adds embeds to webhook message. `embeds` is an array of embeds and can contain up to 10 embeds in the same message.
  image: /img/embeds_1.png
  example: |
    ```json
    {
      "embeds": [{
        "title": "Hello!",
        "description": "Hi! :grinning:"
      }]
    }
    ```

# author
-
  name: author
  description: |
    Adds Author block to embed. `author` is an object which includes three values:

    * `name` - sets name.
    * `url` - sets link. Requires `name` value. If used, transforms `name` into hyperlink.
    * `icon_url` - sets avatar. Requires `name` value.
  image: /img/embed/author.png
  example: |
    ```json
    {
      "embeds": [{
        "author": {
          "name": "Delivery Girl üçï",
          "url": "https://www.reddit.com/r/Pizza/",
          "icon_url": "https://i.imgur.com/V8ZjaMa.jpg"
        },
        "description": "Your pizza is ready!\n:timer:ETA: 10 minutes."
      }]
    }
    ```

# color
-
  name: color
  description: |
    Sets color for webhook's embed. It equals 0 (transparent) by default. Color requires number instead hex code, so you have to convert hexadecimal color code to decimal number. Color can be defined as number `65280` and as string `"65280"`.

    I recommend to use [SpyColor](http://www.spycolor.com/) for color picking, it provides decimal value.
  image: /img/embed/color.png
  example: |
    ```json
    {
      "embeds": [
        {
          "title": "Meow!",
          "color": 1127128
        },
        {
          "title": "Meow-meow!",
          "color": "14177041"
        }
      ]
    }
    ```

# description
-
  name: description
  description: |
    Sets description for webhook's embed.
  image: /img/embed/description.png
  example: |
    ```json
    {
      "embeds": [{
        "description": "*Hi!* **Wow!** I can __use__ hyperlinks [here](https://discordapp.com)."
      }]
    }
    ```

# fields
-
  name: fields
  description: |
    Allows you to use multiple `title + description` blocks in embed. `fields` is an array of `field` objects. Each object includes three values:

    * `name` - sets name for field object. Required;
    * `value` - sets description for field object. Required;
    * `inline` - if `true` then sets field objects in same line, **but** if you have more than 3 objects with enabled `inline` or just too long you will get rows with 3 fields in each one or with 2 fields if you used `thumbnail` object. `false` by default. Optional.

    P.S. You can use up to 25 fields in same embed. `name` and `value` support [Discord Markdown]
  image: /img/embed/fields.png
  example: |
    ```json
    {
      "embeds": [{
        "fields": [
          {
            "name": "Cat",
            "value": "Hi! :wave:",
            "inline": true
          },
          {
            "name": "Dog",
            "value": "hello!",
            "inline": true
          },
          {
            "name": "Cat",
            "value": "wanna play? join to voice channel!"
          },
          {
            "name": "Dog",
            "value": "yay"
          }
        ]
      }]
    }
    ```

# footer
-
  name: footer
  description: |
    Allows you to add footer to embed. `footer` is an object which includes two values:

    * `text` - sets name for author object. Markdown is disabled here!!!
    * `icon_url` - sets icon for author object. Requires `text` value.
  image: /img/embed/footer.png
  example: |
    ```json
    {
      "embeds": [{
          "footer": {
            "text": "Woah! *So cool!* :smirk:",
            "icon_url": "https://i.imgur.com/fKL31aD.jpg"
          },
          "description": "Your pizza is ready!\n:timer:ETA: 10 minutes."
      }]
    }
    ```

# image
-
  name: image
  description: |
    Allows you to use image in the embed. You can set only url of the image. There is no way to set width/height of the picture.
  image: /img/embed/image.png
  example: |
    ```json
    {
      "embeds": [{
        "image": {
          "url": "https://i.imgur.com/ZGPxFN2.jpg"
        }
      }]
    }
    ```

# thumbnail
-
  name: thumbnail
  description: |
    Allows you to use thumbnail in the embed. You can set only url of the thumbnail. There is no way to set width/height of the picture.
  image: /img/embed/thumbnail.png
  example: |
    ```json
    {
      "embeds": [{
        "thumbnail": {
          "url": "https://upload.wikimedia.org/wikipedia/commons/3/38/4-Nature-Wallpapers-2014-1_ukaavUI.jpg"
        }
      }]
    }
    ```

# timestamp
-
  name: timestamp
  description: |
    Allows you to add `timestamp` to embed. Time stores as String in the next format: `"YYYY-MM-DDTHH:MM:SS.MSSZ"`. If `footer` was used they will be separated with a bullet (‚Ä¢). Also, this is special field, because it can show different time based on user's device.

    P.S. Timestamp is not just text. This is formatted UTC time and date. It will show different time because timezones. Look on example below: I set 12pm but it shows 2pm because UTC+2 timezone.
  image: /img/embed/timestamp.png
  example: |
    ```json
    {
      "embeds": [{
        "description": "Time travel!",
        "timestamp": "2015-12-31T12:00:00.000Z"
      }]
    }
    ```

# title
-
  name: title
  description: |
    Sets title for webhook's embed.
  image: /img/embed/title.png
  example: |
    ```json
    {
      "embeds": [{
        "title": "Meow!"
      }]
    }
    ```

# url
-
  name: url
  description: |
    Sets link for title in your webhook message. Requires `title` variable and turns it into hyperlink.
  image: /img/embed/url.png
  example: |
    ```json
    {
      "embeds": [{
        "title": "Google it!",
        "url": "https://google.com/"
      }]
    }
    ```
